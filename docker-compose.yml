version: '3.8'

services:
  postgres:
    container_name: todo-postgres
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: todoapp
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - todo-network

  todo-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: todo-grpc-app
    environment:
      NODE_ENV: production
      PORT: 50051
      HOST: 0.0.0.0
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: todoapp
      DB_USER: postgres
      DB_PASSWORD: password
      DB_SSL: "false"
      LOG_LEVEL: info
    ports:
      - "50051:50051"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./logs:/usr/src/app/logs
    restart: unless-stopped
    networks:
      - todo-network

  kong-db:
    image: postgres:15-alpine
    container_name: kong-db
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kong
    volumes:
      - kong_db_data:/var/lib/postgresql/data
    networks:
      - todo-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kong"]
      interval: 10s
      timeout: 5s
      retries: 5

  kong:
    build:
      context: .
      dockerfile: Dockerfile.kong
    container_name: kong
    restart: always
    depends_on:
      kong-db:
        condition: service_healthy
    command: /bin/sh -c "kong migrations bootstrap && kong prepare && kong start foreground"
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-db
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PLUGINS: bundled,jwt-keycloak,pre-function,grpc-transcode
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_REAL_IP_HEADER: X-Forwarded-For
      KONG_TRUSTED_IPS: 0.0.0.0/0
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_LOG_LEVEL: debug
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - "8080:8000"
      - "8443:8443"
      - "8001:8001"
      - "8444:8444"
      - "8002:8002"
    networks:
      - todo-network

volumes:
  postgres_data:
  kong_db_data:

networks:
  todo-network:
    driver: bridge